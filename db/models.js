var Sequelize = require('sequelize');
var sequelize = new Sequelize('codeoil', 'codeoil', '');

module.exports = (function () {
    var models = {
        Attempt: sequelize.define('attempt', {
            attempt: Sequelize.BIGINT,          // generated by the backend, returned from the frontend
            hash: Sequelize.STRING,             // hash generated by aggregators
            correct: Sequelize.BOOLEAN,         // true if it matched a solution
            attemptSeq: Sequelize.INTEGER,      // the sequence number of this attempt among all attempts for this attempt ID (delayed)
            questionSeq: Sequelize.INTEGER,     // the sequence number of this attempt among all attempts for this question ID (delayed)
        }),
        Solution: sequelize.define('solution', {
            attempt: Sequelize.BIGINT,          // attempt ID, unique per refresh
            hash: Sequelize.STRING,
            seed: Sequelize.BIGINT,
            challengeId: Sequelize.INTEGER,
        }),
        User: sequelize.define('user', {
            githubId: Sequelize.INTEGER,        // integer ID provided by Github
            githubUsername: Sequelize.STRING,
        }),
        Status: sequelize.define('status', {
            challengeId: Sequelize.INTEGER,     // note: not stored in DB
            status: Sequelize.ENUM('SOLVED'),   // note: no record if unsolved
        })
    };

    // Add a key connecting the solution to the model that first solved it
    models.Solution.belongsTo(models.Attempt, { as: 'SolvedBy' });
    models.Solution.belongsTo(models.User, { as: 'User' });
    models.Status.belongsTo(models.User, { as: 'User' });

    return models;
})();